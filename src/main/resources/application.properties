### server port
server.port=8081
spring.application.name=Spring 3 and Keycloak

## logging
logging.level.org.springframework.security=INFO
logging.pattern.console=%d{dd-MM-yyyy HH:mm:ss} %magenta([%thread]) %highlight(%-5level) %logger.%M - %msg%n

## keycloak
keycloak#spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost/realms/external
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost/realms/external
spring.security.oauth2.resourceserver.provider.keycloak.jwk-set-uri=http://localhost/realms/external/protocol/openid-connect/certs
#
spring.security.oauth2.client.provider.keycloak.authorization-uri=http://localhost/realms/external/protocol/openid-connect/auth
spring.security.oauth2.client.provider.keycloak.token-uri=http://localhost/realms/external/protocol/openid-connect/token

spring.security.oauth2.client.registration.external.redirect-uri=http://localhost:8081/*
spring.security.oauth2.client.registration.external.provider=keycloak
spring.security.oauth2.client.registration.external.client-name=dashboard-client
spring.security.oauth2.client.registration.external.redirect-uri-template=http://localhost/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.external.client-id=dashboard-client
spring.security.oauth2.client.registration.external.client-secret=y30In3edvyrUWq17OB9XNOPnFFTka22X
spring.security.oauth2.client.registration.external.scope=openid,offline_access,profile
spring.security.oauth2.client.registration.external.authorization-grant-type=authorization_code
